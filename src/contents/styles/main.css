html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box; /* 2 */
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
@font-face {
  font-family: 'lm';
  src: url("/fonts/lm.eot?x08t0v");
  src: url("/fonts/lm.eot?#iefixx08t0v") format('embedded-opentype'), url("/fonts/lm.woff?x08t0v") format('woff'), url("/fonts/lm.ttf?x08t0v") format('truetype'), url("/fonts/lm.svg?x08t0v#lm") format('svg');
  font-weight: normal;
  font-style: normal;
}
[class^="icon-"],
[class*=" icon-"] {
  font-family: 'lm';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  top: 1px;
  position: relative;
/* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.icon-codepen:before {
  content: "\e60b";
}
.icon-bitbucket:before {
  content: "\e60a";
}
.icon-arrow-up:before {
  content: "\e600";
}
.icon-arrow-right:before {
  content: "\e601";
}
.icon-arrow-down:before {
  content: "\e602";
}
.icon-arrow-left:before {
  content: "\e603";
}
.icon-stack:before {
  content: "\e604";
}
.icon-link:before {
  content: "\e60d";
}
.icon-newtab:before {
  content: "\e60c";
}
.icon-twitter:before {
  content: "\e605";
}
.icon-github:before {
  content: "\e606";
}
.icon-linkedin:before {
  content: "\e607";
}
.icon-lastfm:before {
  content: "\e608";
}
.icon-mail:before {
  content: "\e609";
}
.image,
figure {
  position: relative;
  width: 100%;
}
.image img,
figure img {
  display: block;
  max-width: 100%;
  margin: 0 auto;
}
figure {
  margin: 0;
}
figcaption {
  border-left: 4px solid #354b57;
  margin-top: 5px;
  padding: 4px 10px 3px;
}
figure.duo {
  text-align: center;
}
figure.duo img {
  display: inline-block;
  max-width: 50%;
}
figure.trio {
  text-align: center;
}
figure.trio img {
  display: inline-block;
  max-width: 30%;
}
*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
body {
  background-color: #f8f8f8;
  overflow-y: scroll;
  overflow-x: hidden;
}
.content-wrap .content {
  overflow: hidden;
}
.section-wrap {
  background-color: #fff;
}
.section-wrap section {
  padding: 50px 10px;
  position: relative;
}
.section-wrap.alt {
  background-color: #f8f8f8;
}
@media (min-width: 550px) {
  .section-wrap section {
    margin: 0 auto;
    max-width: 800px;
  }
  .cols {
    overflow: hidden;
  }
  .cols.cols-2 {
    margin-left: -5%;
  }
  .cols.cols-2 .col {
    float: left;
    margin-left: 5%;
    width: 45%;
  }
  .cols.cols-2 .col.three-quarters {
    width: 70%;
  }
  .cols.cols-2 .col.one-quarter {
    width: 20%;
  }
  .cols.cols-3 {
    margin-left: -5%;
  }
  .cols.cols-3 .col {
    float: left;
    margin-left: 5%;
    width: 28.33%;
  }
}
@media (min-width: 800px) {
  .section-wrap section {
    padding: 50px 0;
  }
}
body {
  color: #354b57;
  font-family: "proxima-nova", sans-serif;
  font-weight: 300;
  font-size: 16px;
  letter-spacing: 2px;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-weight: 200;
  margin: 16px 0;
}
h1,
.h1 {
  font-size: 40px;
}
h2,
.h2 {
  font-size: 32px;
}
h3,
.h3 {
  font-size: 28px;
}
h4,
.h4 {
  font-size: 24px;
}
h5,
.h5 {
  font-size: 16px;
}
h6,
.h6 {
  font-size: 16px;
}
ul.unstyled,
ol.unstyled {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
a {
  color: #000;
  text-decoration: none;
}
p {
  font-size: 16px;
}
dl dt {
  font-weight: 100;
}
dl dd {
  margin-left: 30px;
  margin-bottom: 10px;
}
@media (min-width: 550px) {
  dl {
    overflow: hidden;
  }
  dl dl,
  dl dt {
    display: inline-block;
    word-wrap: break-word;
  }
  dl dt {
    float: left;
    width: 25%;
  }
  dl dd {
    float: left;
    margin-left: 0;
    width: 75%;
  }
}
.text-center {
  text-align: center;
}
.hero {
  text-align: center;
  margin: 0 auto;
  font-weight: 200;
}
.hero p {
  font-size: 40px;
  line-height: 1.5;
  margin: 0;
}
.hero span {
  background-color: #354b57;
  color: #fff;
  padding: 5px 10px;
}
@media (min-width: 550px) {
  .hero {
    width: 60%;
  }
}
.avatar {
  background-color: #fff;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  margin: 0 auto;
  width: 180px;
  height: 180px;
  overflow: hidden;
  position: relative;
}
.avatar img {
  -webkit-border-radius: 50%;
  border-radius: 50%;
  width: 170px;
  height: 170px;
  position: relative;
  top: 5px;
  left: 5px;
}
.three-thing {
  position: relative;
}
.three-thing .left-part {
  text-align: center;
}
.three-thing .right-part {
  text-align: center;
}
@media (min-width: 550px) {
  .three-thing {
    overflow: hidden;
    min-height: 195px;
  }
  .three-thing .left-part,
  .three-thing .right-part {
    width: 35%;
    padding-top: 60px;
  }
  .three-thing .left-part {
    float: left;
    text-align: right;
  }
  .three-thing .right-part {
    float: right;
    text-align: left;
  }
  .three-thing .avatar {
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translateX(-50%);
  }
}
.backey-back {
  background-color: #354b57;
  color: #fff;
  position: absolute;
  top: 15px;
  left: 0;
  font-size: 12px;
  padding: 5px 10px;
  overflow: hidden;
  opacity: 0.3;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
  filter: alpha(opacity=30);
}
@media (min-width: 550px) {
  .backey-back {
    width: 32px;
  }
  .backey-back span {
    display: none;
  }
  .backey-back:hover,
  .backey-back:focus {
    -webkit-transition: all 0.1s ease-in-out;
    -moz-transition: all 0.1s ease-in-out;
    -o-transition: all 0.1s ease-in-out;
    -ms-transition: all 0.1s ease-in-out;
    transition: all 0.1s ease-in-out;
    opacity: 1;
    -ms-filter: none;
    filter: none;
    width: 74px;
  }
  .backey-back:hover span,
  .backey-back:focus span {
    display: inline;
  }
}
.hidden {
  position: absolute;
  left: -10000px;
  top: -10000px;
  visibility: hidden;
}
.button {
  -webkit-transition: background-color 0.1s ease-in-out;
  -moz-transition: background-color 0.1s ease-in-out;
  -o-transition: background-color 0.1s ease-in-out;
  -ms-transition: background-color 0.1s ease-in-out;
  transition: background-color 0.1s ease-in-out;
  display: inline-block;
  background-color: #354b57;
  color: #fff;
  padding: 10px 15px;
}
.button:hover {
  background-color: #435f6e;
}
.header-wrap {
  background: transparent url("/images/header.jpg") no-repeat center center;
  -webkit-background-size: 100% auto;
  -moz-background-size: 100% auto;
  background-size: 100% auto;
  padding: 10px 0;
  position: relative;
  -webkit-animation: header-anim 20s ease-in-out 0s infinite alternate;
  -webkit-animation: header-anim 20s ease-in-out 0s infinite alternate;
  -moz-animation: header-anim 20s ease-in-out 0s infinite alternate;
  -o-animation: header-anim 20s ease-in-out 0s infinite alternate;
  -ms-animation: header-anim 20s ease-in-out 0s infinite alternate;
  animation: header-anim 20s ease-in-out 0s infinite alternate;
}
.header-wrap:before {
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  content: "";
  position: absolute;
  background-color: rgba(0,0,0,0.15);
}
.header-wrap .main-header {
  position: relative;
  padding: 10px;
  width: 100%;
}
.header-wrap .main-header .name {
  font-size: 26px;
}
.header-wrap .main-header .name a {
  color: rgba(255,255,255,0.65);
}
.header-wrap .main-header .name span {
  color: #fff;
}
.header-wrap .main-header .name h1 {
  display: inline;
  font-size: inherit;
  margin: 0;
}
@media (min-width: 550px) {
  .header-wrap {
    padding: 50px 0;
  }
  .header-wrap .main-header {
    margin: 0 auto;
    max-width: 800px;
  }
}
@media (min-width: 800px) {
  .header-wrap .main-header {
    padding: 10px 0;
  }
}
@-webkit-keyframes header-anim {
  from {
    -webkit-filter: hue-rotate(0deg);
  }
  to {
    -webkit-filter: hue-rotate(200deg);
  }
}
.main-nav {
  margin-top: 10px;
}
.main-nav li {
  display: inline;
  margin-right: 5px;
}
.main-nav li a {
  color: rgba(255,255,255,0.65);
  font-size: 17px;
  text-transform: lowercase;
}
.main-nav li.active a {
  color: #fff;
}
@media (min-width: 550px) {
  .main-nav {
    position: absolute;
    top: 5px;
    right: 5px;
  }
  .main-nav li {
    margin-right: 0;
    margin-left: 5px;
  }
}
@media (min-width: 800px) {
  .main-nav {
    right: 0;
  }
}
.project {
  overflow: hidden;
}
.project .project-meta {
  text-align: center;
}
@media (min-width: 550px) {
  .project {
    position: relative;
  }
  .project .project-image {
    float: right;
    width: 37.5%;
  }
  .project .project-meta {
    width: 52.5%;
    top: 50%;
    left: 5%;
    position: absolute;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  .alt .project-image {
    float: left;
  }
  .alt .project-meta {
    left: auto;
    right: 5%;
  }
}
.contact-grid {
  margin-left: -3%;
  overflow: hidden;
}
.contact-grid .contact-grid-item {
  background-color: #f8f8f8;
  float: left;
  margin-left: 3%;
  margin-bottom: 3%;
  padding: 30px 10px;
  width: 47%;
}
.contact-grid .contact-grid-item .contact-grid-header {
  display: none;
}
.contact-grid .contact-grid-item .contact-grid-icon {
  text-align: center;
  font-size: 30px;
}
.contact-grid .contact-grid-item .contact-grid-val {
  white-space: nowrap;
  text-align: center;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
}
.contact-grid .contact-grid-item:hover,
.contact-grid .contact-grid-item:focus {
  background-color: #354b57;
  color: #f8f8f8;
  -webkit-transition: all 0.1s ease-in-out;
  -moz-transition: all 0.1s ease-in-out;
  -o-transition: all 0.1s ease-in-out;
  -ms-transition: all 0.1s ease-in-out;
  transition: all 0.1s ease-in-out;
}
@media (min-width: 550px) {
  .contact-grid {
    margin-left: -1%;
  }
  .contact-grid .contact-grid-item {
    margin-left: 1%;
    margin-bottom: 1%;
    width: 32.33%;
  }
}
/*# sourceMappingURL=data:application/json;base64, */